{-# OPTIONS --guardedness --rewriting --cubical #-}

{-|
# Culioli Semantics and Thom's Elementary Catastrophes

This module implements Section 4.5 of Belfiore & Bennequin (2022), covering:
- **Culioli's notional domains**: Interior I, Exterior E, Boundary B
- **Organizing centers** and catastrophe points
- **Semantic operations**: Negation, double negation, interro-negation
- **Cam model**: Paths through semantic space
- **Thom's elementary catastrophes**: A‚ÇÅ-A‚ÇÖ, D‚ÇÑ, D‚ÇÖ
- **Verb valencies**: Connection to linguistic structure
- **Elliptic/hyperbolic umbilics**: Three-actant sentences

## Key Insights

1. **Notional domain structure**:
   - Interior I: "truly P" (properties sure)
   - Exterior E: "truly not-P" (properties false)
   - Boundary B: Uncertainty region
   - Organizing center IE: On discriminant Œî (maximum ambiguity)

2. **Semantic operations as braid paths**:
   - Negation: I ‚Üí E
   - Interro-negation: E ‚Üí I
   - Double negation: I ‚Üí E ‚Üí I (‚â† identity!)
   - "Not uninteresting" ‚â† "interesting" (enriched by path œÉ‚ÇÅœÉ‚ÇÇœÉ‚ÇÅ)

3. **Elementary catastrophes**:
   - A‚ÇÉ (cusp): 2-parameter unfolding of z¬≥
   - D‚ÇÑ (umbilics): 3-parameter unfolding for 3-actant verbs
   - Each catastrophe = organizing center for semantic field

## References

- [CLS95] Culioli: Cognition and Representation in Linguistic Theory
- [Tho72] Thom: Stabilit√© Structurelle et Morphogen√®se
- [Tho83] Thom: Mathematical Models of Morphogenesis
- [Wit53] Wittgenstein: Philosophical Investigations
- [Aus61] Austin: How to Do Things with Words
- [Ben86] Bennequin: Various references
-}

module Neural.Memory.Semantics where

open import 1Lab.Prelude
open import 1Lab.Path
open import 1Lab.HLevel

open import Cat.Base

open import Data.Nat.Base

-- Import from previous modules
open import Neural.Memory.Catastrophe using (‚Ñù; Œõ; Œî; Œõ‚òÖ; Œ£; discriminant; P_uv)
open import Neural.Memory.Braids using (B‚ÇÉ; B¬≥·µ£; œÉ‚ÇÅ; œÉ‚ÇÇ; _‚àò_; ùîñ‚ÇÉ)

--------------------------------------------------------------------------------
-- ¬ß4.5: Culioli's Notional Domains

{-|
## Structure of Meaning

> "The notional domain has an interior I where the properties of the notion are
>  sure, an exterior E where the properties are false, and a boundary B, where
>  things are more uncertain." (p. 109)

**Example**: Notion = "dog"

**Interior I**:
- Center: Prototypes (German Shepherd, Labrador, ...)
- "That's definitely a dog!"
- Properties sure: four legs, barks, mammal, ...

**Exterior E**:
- "That's definitely NOT a dog!"
- Cat, tree, car, ...
- Properties false

**Boundary B**:
- "Is that really a dog?" (chihuahua, wolf, fox, ...)
- Uncertain cases
- Transition region

**Organizing center IE**:
- Imaginary place where I and E not yet separated
- On discriminant Œî: Critical point where separation occurs
- Maximum ambiguity

**Attractors** (Culioli's term):
> "A kind of gradient vector leads the mind to these archetypes, that Culioli
>  named attracting centers, or attractors; however he wrote in 1989: 'Now the
>  term attractor cannot be interpreted as an attainable last point (...) but
>  as the representation of the imaginary absolute value of the property.'"
>  (p. 109)

Not fixed points, but **organizing principles**!
-}

-- Notional regions
data NotionalRegion : Type where
  Interior : NotionalRegion           -- I: "truly P"
  Exterior : NotionalRegion           -- E: "truly not-P"
  Boundary : NotionalRegion           -- B: Uncertainty
  Organizing-Center : NotionalRegion  -- IE: On discriminant Œî

-- Notional domain for a concept P
record NotionalDomain : Type‚ÇÅ where
  field
    -- Predicate defining the notion
    Predicate : Type ‚Üí Type

    -- Regions
    interior : Type  -- I
    exterior : Type  -- E
    boundary : Type  -- B

    -- Prototypes (attractors) in I
    prototypes : List {!!}  -- Central examples

    -- Organizing center (on Œî)
    organizing-center : {!!}

    -- Classification function
    classify : {!!} ‚Üí NotionalRegion

postulate
  -- Example: "dog" notion
  dog-notion : NotionalDomain
  dog-prototypes : {!!}  -- [German Shepherd, Labrador, ...]
  dog-boundary-cases : {!!}  -- [Chihuahua, wolf, fox, ...]

{-|
## Mathematical Correspondence

**Culioli's structure** ‚Üî **Catastrophe theory**:

| Culioli | Math | Dynamics |
|---------|------|----------|
| Interior I | u < 0, outside Œî | Attractor basin (stable minimum) |
| Exterior E | u < 0, outside Œî | Repulsor basin (unstable saddle) |
| Boundary B | Near Œî | Transition region |
| Organizing center IE | On Œî | Catastrophe point (z¬≥) |

> "Mathematically this corresponds precisely to the creation of the external
>  (resp. internal) critical point of z¬≥ + uz + v, on the curve Œî." (p. 109)

**In the terminology of Thom**:
- IE = organizing center = z¬≥ (most degenerate function)
- Unfolding P_uv = z¬≥ + uz + v
- Œî = bifurcation set where I and E separate
-}

-- Correspondence to catastrophe parameters
NotionalRegion-to-Regime : NotionalRegion ‚Üí Œõ ‚Üí Type
NotionalRegion-to-Regime Interior (u , v) = u < 0.0 √ó discriminant u v < 0.0  -- Bistable
NotionalRegion-to-Regime Exterior (u , v) = u < 0.0 √ó discriminant u v < 0.0  -- Same!
NotionalRegion-to-Regime Boundary (u , v) = {!!}  -- Near Œî
NotionalRegion-to-Regime Organizing-Center (u , v) = discriminant u v ‚â° 0.0  -- On Œî

{-|
**Key insight**: I and E are BOTH in the bistable regime (u < 0)!

The difference is which basin:
- Interior I: Near stable minimum
- Exterior E: Near unstable saddle (or other basin if 3 roots)

Boundary B: Near discriminant where basins meet
-}

--------------------------------------------------------------------------------
-- ¬ß4.5: Semantic Operations

{-|
## Negation and Interrogation

> "The division I, B, E takes all its sense when interrogative mode is involved,
>  or negation and double negation, or intero-negative mode. In negation you go
>  out of the interior, in interro-negation you come back inside from E." (p. 109)

**Operations**:

1. **Negation** (¬¨): I ‚Üí E
   - "That is a dog" ‚Üí "That is NOT a dog"
   - Leave interior for exterior

2. **Interro-negation** (¬¨?): E ‚Üí I
   - "Is it really NOT a dog?" (expecting "yes, it is a dog")
   - Return to interior from exterior

3. **Double negation** (¬¨¬¨): I ‚Üí E ‚Üí I
   - "It is not the case that it's not a dog"
   - NOT same as identity! (Enriched by path)

4. **Interro-positive** (?): B ‚Üí ?
   - "Is that a dog?" (neutral question)
   - Boundary exploration
-}

-- Semantic paths in notional domain
data SemanticPath : NotionalRegion ‚Üí NotionalRegion ‚Üí Type where
  -- Identity (staying in same region)
  refl-path : ‚àÄ {r} ‚Üí SemanticPath r r

  -- Negation: I ‚Üí E
  negation : SemanticPath Interior Exterior

  -- Interro-negation: E ‚Üí I
  interro-negation : SemanticPath Exterior Interior

  -- To/from boundary
  to-boundary : ‚àÄ {r} ‚Üí SemanticPath r Boundary
  from-boundary : ‚àÄ {r} ‚Üí SemanticPath Boundary r

  -- Via organizing center
  via-IE : ‚àÄ {r r'} ‚Üí SemanticPath r Organizing-Center
         ‚Üí SemanticPath Organizing-Center r'
         ‚Üí SemanticPath r r'

  -- Composition
  _‚®æ_ : ‚àÄ {r‚ÇÅ r‚ÇÇ r‚ÇÉ} ‚Üí SemanticPath r‚ÇÅ r‚ÇÇ ‚Üí SemanticPath r‚ÇÇ r‚ÇÉ
      ‚Üí SemanticPath r‚ÇÅ r‚ÇÉ

-- Double negation (not equal to identity!)
double-negation : SemanticPath Interior Interior
double-negation = negation ‚®æ interro-negation

{-|
## Examples from Culioli

### Example 1: "Is your brother really here?"

> "It means that 'I do not expect that your brother is here'."

**Analysis**:
- Start: E (exterior of "brother here")
- Interro-negation: E ‚Üí I
- **Meaning**: Skeptical question from outside I

**Braid structure**: Path from E through boundary to I

### Example 2: "Now that, that is not a dog!"

> "You place yourself in front of proposition P, or inside the notion I, you
>  know what is a dog, then goes to E."

**Analysis**:
- Start: I (knows "dog")
- Negation: I ‚Üí E
- **Emphasis**: Strongly outside I

### Example 3: "Shall I still call that a dog?"

**Analysis**:
- Position: Boundary B
- Question: Whether to stay in I or move to E
- **Uncertainty**: Right at threshold

### Example 4: "I do not refuse to help"

> "Here come back in I of 'help' after a turn in its exterior E."

**Analysis**:
- Start: I ("help")
- Negation: I ‚Üí E ("refuse to help")
- Negation again: E ‚Üí I ("not refuse")
- **Result**: Back in I, but via E (litotes, understatement)

**NOT same as "I will help"!** (Path matters)
-}

postulate
  -- Linguistic examples
  "is-your-brother-really-here?" : SemanticPath Exterior Interior
  "that-is-not-a-dog!" : SemanticPath Interior Exterior
  "shall-I-call-that-a-dog?" : SemanticPath Boundary Boundary
  "I-do-not-refuse-to-help" : SemanticPath Interior Interior

  -- Last one equals double negation
  litotes-is-double-negation : "I-do-not-refuse-to-help" ‚â° double-negation

--------------------------------------------------------------------------------
-- ¬ß4.5: The Cam Model

{-|
## Culioli's Cam

> "To describe the mechanisms beyond these paths, Culioli used the model of the
>  cam: 'the movement travels from one place to another, only to return to the
>  initial plane'." (p. 110)

**What is a cam?**: Mechanical device that converts rotational to linear motion
- Rotating cam surface
- Follower moves up/down as cam rotates
- Returns to same position after full rotation
- **BUT**: Path matters! Different trajectory

**Semantic cam**:
- Start at point (e.g., IE organizing center)
- Make half-turn around I (through E)
- Make another half-turn back to I
- **Result**: Same point, but different "plane" (meaning enriched)

### Example: "This book is only slightly interesting"

> "Start from IE, then make a half-turn around I which passes by E then come
>  to I by another half-turn."

**Path**:
1. IE (organizing center: interesting/not-interesting unseparated)
2. ‚Üí E ("not interesting")
3. ‚Üí Boundary near I ("only slightly interesting")
4. Complete turn ‚Üí Back near IE but "above" original plane

**Enclosed area = meaning**

### Example: "This book is not uninteresting"

> "Means that it is more than interesting."

**Path**:
1. Start: I ("interesting")
2. Negation: I ‚Üí E ("not interesting" = "uninteresting")
3. Negation: E ‚Üí I ("not uninteresting")
4. **Result**: I, but via full loop
5. **Meaning**: More than just I (enriched, intensified)

**Braid element**: œÉ‚ÇÅœÉ‚ÇÇœÉ‚ÇÅ (or œÉ‚ÇÇœÉ‚ÇÅœÉ‚ÇÇ, equivalent by braid relation)

This is a **full braid** through both branches of the cusp!
-}

-- Cam path (full loop returning to start)
data CamPath : NotionalRegion ‚Üí Type where
  trivial-cam : ‚àÄ {r} ‚Üí CamPath r  -- No rotation

  full-cam : CamPath Organizing-Center  -- Full rotation through I and E

  half-cam : CamPath Boundary  -- Half rotation

-- Cam path as braid element
cam-to-braid : CamPath Organizing-Center ‚Üí B‚ÇÉ
cam-to-braid full-cam = œÉ‚ÇÅ ‚àò œÉ‚ÇÇ ‚àò œÉ‚ÇÅ  -- Full braid

-- "Not uninteresting" interpretation
postulate
  "not-uninteresting" : SemanticPath Interior Interior
  "not-uninteresting"-is-cam : {!!}  -- Via full cam
  "not-uninteresting"-braid : {!!}  -- Maps to œÉ‚ÇÅœÉ‚ÇÇœÉ‚ÇÅ

  -- Meaning: More than just "interesting"
  intensification : {!!}  -- "not uninteresting" > "interesting"

{-|
## Paths on Gathered Surface Œ£

> "The paths here are well represented on the gathered real surface Œ£, of
>  equation z¬≥ + uz + v = 0, but they can also be made in the complement of Œî
>  in Œõ in a complexified domain." (p. 110)

**Two representations**:

1. **On Œ£** (gathered surface):
   - Actual roots z(u,v)
   - Folding lines visible
   - Distinguishes stable/unstable

2. **On Œõ \ Œî** (parameter space):
   - Projects to (u,v)
   - Homotopy class only
   - Simpler, but loses root distinction

> "It seems that only the homotopy class is important, not the metric, however
>  we cannot neglect a weakly quantitative aspect, on the way of discretization
>  in the nuances of the language."

**Culioli groupoid** B¬≥·µ£ captures both:
- Homotopy class (braid element)
- Root level (which branch of Œ£)
-}

-- Path on Œ£ vs path on Œõ
postulate
  path-on-Œ£ : {!!} ‚Üí {!!}  -- Path on gathered surface
  path-on-Œõ : {!!} ‚Üí {!!}  -- Projected path on parameters

  projection-Œ£-to-Œõ : path-on-Œ£ ‚Üí path-on-Œõ

  homotopy-class-matters : {!!}
  weak-quantitative-aspect : {!!}  -- Nuances in language

--------------------------------------------------------------------------------
-- ¬ß4.5: Thom's Elementary Catastrophes

{-|
## The A_n and D_n Series

> "In this approach, all the elementary catastrophes having a universal unfolding
>  of dimension less than 4 are used, through their sections and projections, for
>  understanding in particular the valencies of the verbs." (p. 110)

**Elementary catastrophes** (organizing centers):

**A_n series** (symmetric group ùîñ_{n+1}):
- **A‚ÇÅ** (well): y = x¬≤ (1 parameter)
- **A‚ÇÇ** (fold): y = x¬≥ (2 parameters: u, v)
- **A‚ÇÉ** (cusp): y = x‚Å¥ (3 parameters: u, v, w)
- **A‚ÇÑ** (swallowtail): y = x‚Åµ (4 parameters)
- **A‚ÇÖ** (butterfly): y = x‚Å∂ (5 parameters)

**D_n series** (hypercube symmetries):
- **D‚ÇÑ‚Å∫** (elliptic umbilic): y = x‚ÇÅ¬≥ - x‚ÇÅx‚ÇÇ¬≤ (3 parameters)
- **D‚ÇÑ‚Åª** (hyperbolic umbilic): y = x‚ÇÅ¬≥ + x‚ÇÅx‚ÇÇ¬≤ (3 parameters)
- **D‚ÇÖ** (parabolic umbilic): y = x‚ÇÅ‚Å¥ + x‚ÇÅx‚ÇÇ¬≤ (4 parameters)

**Galois groups**:
- A_n: Symmetric group ùîñ_{n+1}
- D_n: Subgroups of hypercube symmetries

**Our focus**: A‚ÇÇ (cusp) with organizing center z¬≥
-}

-- Elementary catastrophe types
data CatastropheType : Type where
  A‚ÇÅ : CatastropheType  -- Well
  A‚ÇÇ : CatastropheType  -- Fold
  A‚ÇÉ : CatastropheType  -- Cusp ‚≠ê (our focus!)
  A‚ÇÑ : CatastropheType  -- Swallowtail
  A‚ÇÖ : CatastropheType  -- Butterfly
  D‚ÇÑ‚Å∫ : CatastropheType  -- Elliptic umbilic
  D‚ÇÑ‚Åª : CatastropheType  -- Hyperbolic umbilic
  D‚ÇÖ : CatastropheType  -- Parabolic umbilic

-- Organizing center (germ of function)
organizing-center : CatastropheType ‚Üí {!!}  -- Polynomial
organizing-center A‚ÇÅ = {!!}  -- x¬≤
organizing-center A‚ÇÇ = {!!}  -- x¬≥
organizing-center A‚ÇÉ = {!!}  -- x‚Å¥
organizing-center A‚ÇÑ = {!!}  -- x‚Åµ
organizing-center A‚ÇÖ = {!!}  -- x‚Å∂
organizing-center D‚ÇÑ‚Å∫ = {!!}  -- x‚ÇÅ¬≥ - x‚ÇÅx‚ÇÇ¬≤
organizing-center D‚ÇÑ‚Åª = {!!}  -- x‚ÇÅ¬≥ + x‚ÇÅx‚ÇÇ¬≤
organizing-center D‚ÇÖ = {!!}  -- x‚ÇÅ‚Å¥ + x‚ÇÅx‚ÇÇ¬≤

-- Codimension (number of parameters in universal unfolding)
codimension : CatastropheType ‚Üí Nat
codimension A‚ÇÅ = 1
codimension A‚ÇÇ = 2  -- (u, v) ‚≠ê
codimension A‚ÇÉ = 3
codimension A‚ÇÑ = 4
codimension A‚ÇÖ = 5
codimension D‚ÇÑ‚Å∫ = 3  -- Same as A‚ÇÉ!
codimension D‚ÇÑ‚Åª = 3
codimension D‚ÇÖ = 4

-- Galois group
galois-group : CatastropheType ‚Üí Type
galois-group A‚ÇÅ = {!!}  -- ùîñ‚ÇÇ
galois-group A‚ÇÇ = ùîñ‚ÇÉ  -- ùîñ‚ÇÉ ‚≠ê
galois-group A‚ÇÉ = {!!}  -- ùîñ‚ÇÑ
galois-group A‚ÇÑ = {!!}  -- ùîñ‚ÇÖ
galois-group A‚ÇÖ = {!!}  -- ùîñ‚ÇÜ
galois-group D‚ÇÑ‚Å∫ = {!!}  -- D‚ÇÑ (dihedral/hypercube)
galois-group D‚ÇÑ‚Åª = {!!}  -- D‚ÇÑ
galois-group D‚ÇÖ = {!!}  -- D‚ÇÖ

--------------------------------------------------------------------------------
-- ¬ß4.5: Verb Valencies

{-|
## Linguistic Structure and Catastrophes

> "For understanding in particular the valencies of the verbs, from the semantic
>  point of view, according to Peirce, Tesni√®re, Allerton: impersonal, intransitive,
>  transitive, triadic, quadratic." (p. 110)

**Valency** = number of arguments (actants) a verb takes

**Examples**:

0. **Impersonal** (0 actants): "it rains", "it snows"
   - No real subject
   - Catastrophe: None (constant)

1. **Intransitive** (1 actant): "she sleeps"
   - Subject only
   - Catastrophe: A‚ÇÅ (well, y = x¬≤)

2. **Transitive** (2 actants): "he kicks the ball"
   - Subject + direct object
   - Catastrophe: A‚ÇÇ (fold, y = x¬≥) ‚≠ê

3. **Triadic** (3 actants): "she gives him a ball"
   - Subject + indirect object + direct object
   - Catastrophe: A‚ÇÉ (cusp) or D‚ÇÑ (umbilic)

4. **Quadratic** (4 actants): "she ties the goat to a tree with a rope"
   - Subject + object + location + instrument
   - Catastrophe: A‚ÇÑ (swallowtail) or D‚ÇÖ

**Key insight**: Each actant = parameter in unfolding!

**Connection to DNNs**:
- Input x_t can have multiple components (subject, object, ...)
- Each component = coordinate in unfolding space
- Memory cell dynamics = catastrophe unfolding
-}

-- Verb valency
data Valency : Type where
  impersonal : Valency   -- 0 actants
  intransitive : Valency  -- 1 actant
  transitive : Valency    -- 2 actants
  triadic : Valency       -- 3 actants
  quadratic : Valency     -- 4 actants

-- Number of actants
actants : Valency ‚Üí Nat
actants impersonal = 0
actants intransitive = 1
actants transitive = 2
actants triadic = 3
actants quadratic = 4

-- Associated catastrophe type
catastrophe-for-valency : Valency ‚Üí CatastropheType
catastrophe-for-valency impersonal = A‚ÇÅ  -- Or constant
catastrophe-for-valency intransitive = A‚ÇÅ
catastrophe-for-valency transitive = A‚ÇÇ  -- ‚≠ê Our cusp!
catastrophe-for-valency triadic = D‚ÇÑ‚Å∫  -- Or A‚ÇÉ
catastrophe-for-valency quadratic = A‚ÇÑ  -- Or D‚ÇÖ

postulate
  -- Linguistic examples
  "it-rains" : {!!}  -- Impersonal
  "she-sleeps" : {!!}  -- Intransitive
  "he-kicks-the-ball" : {!!}  -- Transitive
  "she-gives-him-a-ball" : {!!}  -- Triadic
  "she-ties-goat-to-tree-with-rope" : {!!}  -- Quadratic

{-|
**Why D‚ÇÑ for triadic?**:

Elliptic and hyperbolic umbilics (D‚ÇÑ‚Å∫, D‚ÇÑ‚Åª) have same codimension as A‚ÇÉ
but different structure:
- A‚ÇÉ: Single variable x with 4 derivatives
- D‚ÇÑ: Two variables (x‚ÇÅ, x‚ÇÇ) with coupling

For triadic verbs:
- Subject, indirect object, direct object
- Natural to separate into (subject) vs (objects)
- D‚ÇÑ form: Œ∑ = z¬≥ ‚àì zw¬≤ + uz + vw + ... (see below)
-}

--------------------------------------------------------------------------------
-- ¬ß4.5: Elliptic Umbilic for Three-Actant Sentences

{-|
## Equation 4.35: Three-Actant Encoding

> "The case of z¬≥ corresponds to A‚ÇÇ. It is tempting to consider the case of D‚ÇÑ,
>  i.e. the elliptic and hyperbolic umbilics, because their formulas are very
>  closed to MGU2." (p. 111)

**Elliptic umbilic** (D‚ÇÑ‚Å∫):
  Œ∑ = z¬≥ - zw¬≤ + uz + vw + x(z¬≤ + w¬≤) + y

**Hyperbolic umbilic** (D‚ÇÑ‚Åª):
  Œ∑ = z¬≥ + zw¬≤ + uz + vw + x(z¬≤ + w¬≤) + y

**Parameters** (6 total):
- z, w: Internal coordinates (hidden state components)
- u, v, w, x, y: Unfolding parameters (from input)

> "This would allow the direct coding and translation of sentences by using
>  three actant."

**Encoding scheme**:
- Subject ‚Üí u parameter
- Indirect object ‚Üí v parameter
- Direct object ‚Üí w parameter (or y)
- Modifiers ‚Üí x, y parameters

**Example**: "She gives him a ball"
- "She" (subject) ‚Üí u
- "him" (indirect object) ‚Üí v
- "ball" (direct object) ‚Üí w or y
- Tense, aspect, mood ‚Üí x

**Why this works**:
- D‚ÇÑ is universal unfolding of z¬≥ - zw¬≤
- Codimension 3 (but using 5 parameters for flexibility)
- Galois group preserves subject/object distinctions
- Similar to MGU2 structure (degree 3 in hidden, degree 1 in inputs)
-}

-- Elliptic umbilic formula (Equation 4.35)
elliptic-umbilic : ‚Ñù ‚Üí ‚Ñù ‚Üí ‚Ñù ‚Üí ‚Ñù ‚Üí ‚Ñù ‚Üí ‚Ñù ‚Üí ‚Ñù ‚Üí ‚Ñù ‚Üí ‚Ñù
elliptic-umbilic z w u v x y sign =
  z * z * z + sign * (z * w * w) + u * z + v * w + x * (z * z + w * w) + y

-- Hyperbolic vs elliptic
hyperbolic-umbilic : ‚Ñù ‚Üí ‚Ñù ‚Üí ‚Ñù ‚Üí ‚Ñù ‚Üí ‚Ñù ‚Üí ‚Ñù ‚Üí ‚Ñù
hyperbolic-umbilic z w u v x y = elliptic-umbilic z w u v x y 1.0

elliptic-umbilic-proper : ‚Ñù ‚Üí ‚Ñù ‚Üí ‚Ñù ‚Üí ‚Ñù ‚Üí ‚Ñù ‚Üí ‚Ñù ‚Üí ‚Ñù
elliptic-umbilic-proper z w u v x y = elliptic-umbilic z w u v x y (-1.0)

-- Three-actant encoding
record ThreeActant : Type where
  field
    subject : ‚Ñù  -- u parameter
    indirect-object : ‚Ñù  -- v parameter
    direct-object : ‚Ñù  -- y parameter
    modifiers : ‚Ñù √ó ‚Ñù  -- (w, x) parameters

-- Encode sentence as umbilic parameters
encode-triadic : ThreeActant ‚Üí {!!}  -- ‚Üí Umbilic parameters
encode-triadic act = {!!}

postulate
  -- Example: "She gives him a ball"
  she-gives-him-ball : ThreeActant
  she-gives-him-ball-encoding : {!!}

{-|
## Network Construction for Umbilics

> "It is not difficult to construct networks, on the model of MLSTM, such that
>  the dynamics of neurons obey to the unfolding of these singular functions.
>  The various actors of a verb in a sentence could be separated input data,
>  for different coordinates on the unfolding parameters." (p. 111)

**Architecture for D‚ÇÑ**:
- Hidden state: (z, w) ‚àà ‚Ñù¬≤
- Input: (u, v, x, y) ‚àà ‚Ñù‚Å¥
- Dynamics: Œ∑ = elliptic-umbilic(z, w, u, v, x, y, ¬±1)

**Parameters**:
- If m = 2 (two-dimensional hidden for z, w)
- If n = 4 (four input dimensions)
- Matrices: U_z (2√ó2), U_w (2√ó2), W_u (2√ó4), W_v (2√ó4), W_x (2√ó4), W_y (2√ó4)
- Total: 2*2 + 2*2 + 4*(2*4) = 4 + 32 = 36 parameters

**Comparison to cubic cell** (Eq 4.21):
- Cubic: m¬≤ + 2mn parameters
- For m=2, n=4: 4 + 16 = 20 parameters
- D‚ÇÑ: More complex but handles 3-actant structure naturally

**Testing**:
> "The efficiency of these cells should be tested in translation." (p. 111)

Proposed experiments:
- Train on triadic verb sentences
- Compare cubic vs D‚ÇÑ umbilic cells
- Test semantic preservation across translations
- Measure whether actor roles preserved
-}

-- D‚ÇÑ umbilic cell architecture
record Umbilic-Weights (m n : Nat) : Type where
  constructor umbilic-weights
  field
    -- For z coordinate (hidden)
    U_z : {!!}  -- LinearForm m m

    -- For w coordinate (hidden)
    U_w : {!!}  -- LinearForm m m

    -- Unfolding parameters from input
    W_u : {!!}  -- LinearForm m n
    W_v : {!!}  -- LinearForm m n
    W_x : {!!}  -- LinearForm m n
    W_y : {!!}  -- LinearForm m n

    -- Sign (elliptic vs hyperbolic)
    sign : ‚Ñù  -- ¬±1

-- Umbilic cell step
postulate
  umbilic-step : ‚àÄ {m n} ‚Üí Umbilic-Weights m n
               ‚Üí {!!}  -- Hidden state (z, w)
               ‚Üí {!!}  -- Input Œæ
               ‚Üí {!!}  -- New hidden state

  -- Parameter count
  umbilic-param-count : (m n : Nat) ‚Üí Nat
  umbilic-param-count-formula : ‚àÄ m n
                              ‚Üí umbilic-param-count m n ‚â° 2 * m * m + 4 * m * n

--------------------------------------------------------------------------------
-- ¬ß4.5: Memory and Readers

{-|
## Learned Weights as Semantic "Readers"

> "The precise learned 2mn weights w_x for the coefficients u^a and v^a, for
>  a = 1,...,m, together with the weights in the forms Œ±^a for h_{t-1} gives
>  vectors (or more accurately matrices), which are like readers of the words x
>  in entry, taking in account the contexts from the other words through h."
>  (p. 111)

**Frege's context principle**:
> "Remember Frege: a word has a meaning only in the context of a sentence."

**Wittgenstein**:
> "Naming is not yet a move in a language-game." ([Wit53, p. 49])

**Semantic structure**:
- Input words x_t
- Context from h_{t-1} (previous words)
- Weights W_u, W_v: "Readers" that extract meaning from (x_t, h_{t-1})
- Parameters (u,v) position word in semantic space Œõ
- Path through Œõ‚òÖ = meaning construction
- Braid element = semantic operation performed

> "To get 'meanings', the names, necessarily embedded in sentences, must resonate
>  with other contexts and experiences, and must be situated with respect to the
>  discriminant, along a path."

**Categorical proposal**:
> "Thus we suggest that the vector spaces of 'readers' W, and the vector spaces
>  of states X are local systems A over a fibered category Fin groupoids B¬≥·µ£
>  over the network's category C."

**Local system** = Functor from fundamental groupoid to vector spaces
- Objects: Points in Œõ‚òÖ or Œ£‚òÖ
- Morphisms: Braid elements (semantic operations)
- Fibers: Vector spaces of word embeddings
- Monodromy: How meaning transforms along paths

This is **sheaf theory for semantics**!
-}

postulate
  -- Vector space of "readers"
  Readers : (m n : Nat) ‚Üí Type

  -- Local system over B¬≥·µ£
  semantic-local-system : {!!}  -- Functor B¬≥·µ£ ‚Üí Vect

  -- Fibered category structure
  fibered-over-network-cat : {!!}

  -- Frege's context principle
  word-meaning-requires-context : {!!}

  -- Wittgenstein's language game
  naming-not-language-game : {!!}

{-|
## Quotienting the Culioli Groupoid

> "In some circumstances, the groupoid B¬≥·µ£ can be replaced by the quotient over
>  objects B‚ÇÉ(‚Ñù), or a quotient over morphisms giving SL‚ÇÇ or ùîñ‚ÇÉ."

**When to use each**:

1. **B¬≥·µ£ (Culioli groupoid)**: Full semantic structure
   - Distinguishes stable/unstable
   - Notional domains with I, E, B, IE
   - Complete meaning representation
   - **Use for**: Complex semantic tasks, metaphor, poetry

2. **B‚ÇÉ(‚Ñù)**: Computable parameters, complex monodromy
   - Real parameters (u,v)
   - Complex paths for tracking
   - **Use for**: Standard NLP, translation

3. **B‚ÇÉ(‚Ñù) / SL‚ÇÇ(‚Ñ§)**: Modular structure
   - Periodic structure
   - Connections to number theory
   - **Use for**: Structured semantic spaces

4. **B‚ÇÉ(‚Ñù) / ùîñ‚ÇÉ**: Just permutations
   - Simplest structure
   - Forgets over/under information
   - **Use for**: Basic argument role labeling

**Trade-off**: Expressiveness vs computational cost
-}

--------------------------------------------------------------------------------
-- Summary: Linguistic Meaning as Braided Catastrophes

{-|
## The Complete Picture

**Culioli's notional domains** ‚Üî **Catastrophe theory**:

| Linguistic | Mathematical | DNN |
|------------|--------------|-----|
| Interior I | Stable attractor (u < 0) | Hidden state basin |
| Exterior E | Unstable/other basin | Complementary basin |
| Boundary B | Near discriminant Œî | Transition region |
| Organizing center IE | On Œî (catastrophe) | Critical parameters |
| Attractor | Prototype | Learned embedding |
| Negation | Path I ‚Üí E | Cross discriminant |
| Double negation | Loop I ‚Üí E ‚Üí I | Braid œÉ‚ÇÅœÉ‚ÇÇœÉ‚ÇÅ |
| Cam movement | Path via IE | Full semantic trajectory |

**Elementary catastrophes** ‚Üî **Verb valencies**:

| Catastrophe | Actants | Example | Unfolding |
|-------------|---------|---------|-----------|
| A‚ÇÅ (well) | 1 | "she sleeps" | y = x¬≤ + u |
| A‚ÇÇ (fold) | 2 | "he kicks ball" | y = x¬≥ + ux + v |
| A‚ÇÉ (cusp) | 3 | "she gives ball" | y = x‚Å¥ + ux¬≤ + vx + w |
| D‚ÇÑ (umbilic) | 3 | "she gives him ball" | z¬≥ ‚àì zw¬≤ + uz + vw + ... |
| A‚ÇÑ (swallowtail) | 4 | "tie goat to tree" | y = x‚Åµ + ... |

**Braid group** ‚Üî **Semantic operations**:

| Braid | Semantic | Example |
|-------|----------|---------|
| Œµ (identity) | Assertion | "It is a dog" |
| œÉ‚ÇÅ | Simple negation | "It is not a dog" |
| œÉ‚ÇÅ‚Åª¬π | Interro-negation | "Is it not a dog?" |
| œÉ‚ÇÅœÉ‚ÇÇœÉ‚ÇÅ | Double negation | "Not uninteresting" |
| (œÉ‚ÇÅœÉ‚ÇÇ)¬≥ | Full twist (center) | Complete semantic cycle |

**The unified framework**:

1. **Words** ‚Üí Parameters (u,v,...) in Œõ
2. **Context** (h_{t-1}) ‚Üí Position in semantic space
3. **Sequence** ‚Üí Path in Œõ‚òÖ
4. **Meaning** ‚Üí Braid element (homotopy class of path)
5. **Nuance** ‚Üí Position on gathered surface Œ£‚òÖ
6. **Prototypes** ‚Üí Attractors in notional domain
7. **Ambiguity** ‚Üí Discriminant Œî
8. **Semantic shift** ‚Üí Crossing catastrophe point

**Why this explains LSTM success**:

- **Degree 3 essential**: A‚ÇÇ (fold) is universal for 2-parameter unfoldings
- **MGU2 better**: Degree 1 in input sufficient (parameters u,v enough)
- **Multiplicity m matters**: Each neuron = coordinate in semantic space
- **Context crucial**: h_{t-1} provides "context" (Frege, Wittgenstein)
- **Paths encode meaning**: Not just endpoints, but trajectory
- **Braid structure**: Captures non-commutativity of semantic operations

This is **catastrophe theory + braid topology = linguistic semantics**!

The fact that LSTMs empirically work is NOT accidental‚Äîthey implement the
mathematical structure of meaning discovered independently by:
- Culioli (linguistics)
- Thom (catastrophe theory)
- Artin (braid groups)
- Whitney, Malgrange, Mather (singularity theory)

**This is mathematics explaining language, explaining deep learning!**
-}
