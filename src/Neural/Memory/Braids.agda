{-# OPTIONS --guardedness --rewriting --cubical #-}

{-|
# Braid Groups and Semantic Groupoids

This module implements Section 4.4 (continued) of Belfiore & Bennequin (2022):
- **Artin braid group B₃** with generators σ₁, σ₂
- **Fundamental groupoid** Π(Λ★_ℂ) = B₃
- **Quotient groups**: B₃/C, PSL₂(ℤ), SL₂(ℤ), 𝔖₃
- **Real points groupoid** B₃(ℝ)
- **Culioli groupoid** B³ᵣ = Πᵣ over gathered surface Σ★
- **Representations**: Cardan, elliptic integrals

## Key Results

1. **Braid group B₃**: π₁(Λ★_ℂ) for discriminant complement
   - Generators: σ₁, σ₂ (loops around cusp branches)
   - Relation: σ₁σ₂σ₁ = σ₂σ₁σ₂ (braid relation)

2. **Center C**: Generated by c = (σ₁σ₂)³

3. **Quotients**:
   - B₃/C → PSL₂(ℤ) (Möbius group)
   - B₃/C → SL₂(ℤ) (modular group)
   - B₃ → 𝔖₃ (symmetric group on 3 elements)

4. **Culioli groupoid B³ᵣ**: Distinguishes stable/unstable branches
   - Objects: Points of Σ★
   - Morphisms: Homotopy classes of paths
   - Covering: π: B³ᵣ → B₃(ℝ)

## References

- [AGZV12b] Arnold et al.: Singularity Theory II (braids and monodromy)
- [Loo78] Looijenga: Real structures in complex kaleidoscope
- [Mac12] MacLane: Homological Algebra (group cohomology)
-}

module Neural.Memory.Braids where

open import 1Lab.Prelude
open import 1Lab.Path
open import 1Lab.HLevel

open import Cat.Base
open import Cat.Groupoid

open import Algebra.Group
open import Algebra.Group.Ab

open import Data.Nat.Base

-- Import from previous modules
open import Neural.Memory.Catastrophe using (ℝ; Λ; Δ; Λ★; Σ; Σ★; discriminant)

--------------------------------------------------------------------------------
-- §4.4: Artin Braid Group B₃

{-|
## The Braid Group B₃

> "The ambiguity in distinguishing individual roots along a path is contained
>  in the Poincaré fundamental group π₁(Λ★_ℂ). However the precise definition
>  of this group requires the choice of a base point in Λ★_ℂ, then it is more
>  convenient to consider the fundamental groupoid Π(Λ★_ℂ) = B₃." (p. 106)

**Fundamental groupoid**:
- Objects: Points in Λ★_ℂ (parameters avoiding discriminant)
- Morphisms: Homotopy classes of paths

**Fundamental group** (at basepoint λ₀):
- π₁(Λ★_ℂ; λ₀) = Aut(λ₀) in B₃
- Isomorphic to **Artin braid group B₃**

**Generators**: σ₁, σ₂ (see Figure 4.3, p. 106)

**Construction**:
> "Take a line u = u₀ ∈ ℝ⁻ ⊂ ℂ, with complex coordinate v, and let v⁺₀, v⁻₀
>  be the positive and negative square roots of -(4/27)u³₀; the loop σ₁ = σ⁺
>  (resp. σ₂ = σ⁻) is based in 0, contained in the line u = u₀ and makes one
>  turn in the trigonometric sense around v⁺₀ (resp. v⁻₀)."

**Relation**: σ₁σ₂σ₁ = σ₂σ₁σ₂ (the braid relation)

**DNN Interpretation**:
- Tracking roots of P_uv as (u,v) varies
- σ₁, σ₂: Loops exchanging roots
- Braid relation: Different ways to exchange all 3 roots give same result
- This is the **algebraic structure of semantic ambiguity**!
-}

-- Braid group generators
data B₃-Generator : Type where
  σ₁ : B₃-Generator
  σ₂ : B₃-Generator

-- Braid group B₃ (free group on σ₁, σ₂ modulo braid relation)
data B₃ : Type where
  ε : B₃  -- Identity (empty braid)
  gen : B₃-Generator → B₃  -- Single generator
  _∘_ : B₃ → B₃ → B₃  -- Composition (stacking braids)

  -- Braid relation: σ₁σ₂σ₁ = σ₂σ₁σ₂
  braid-relation : gen σ₁ ∘ gen σ₂ ∘ gen σ₁ ≡ gen σ₂ ∘ gen σ₁ ∘ gen σ₂

  -- Group axioms
  ∘-assoc : ∀ (b₁ b₂ b₃ : B₃) → (b₁ ∘ b₂) ∘ b₃ ≡ b₁ ∘ (b₂ ∘ b₃)
  ∘-unit-l : ∀ (b : B₃) → ε ∘ b ≡ b
  ∘-unit-r : ∀ (b : B₃) → b ∘ ε ≡ b

-- Inverse generators
σ₁⁻¹ σ₂⁻¹ : B₃
σ₁⁻¹ = {!!}  -- Inverse braid (crossover opposite direction)
σ₂⁻¹ = {!!}

postulate
  -- Inverses exist
  _⁻¹ : B₃ → B₃
  ∘-inv-l : ∀ (b : B₃) → b ⁻¹ ∘ b ≡ ε
  ∘-inv-r : ∀ (b : B₃) → b ∘ b ⁻¹ ≡ ε

-- B₃ as a group
B₃-Group : Group lzero
B₃-Group = {!!}  -- Use 1Lab's Group infrastructure

{-|
**Interpretation of Braid Relation**:

σ₁σ₂σ₁ = σ₂σ₁σ₂ says:
- "Move root 1 over root 2, then root 2 over root 3, then root 1 over root 2"
- Equals: "Move root 2 over root 3, then root 1 over root 2, then root 2 over root 3"

Both give the same cyclic permutation (1 → 2 → 3 → 1), but with different
"twisting" that cancels out. This is the essence of braid groups!

See Figure 4.3 in paper for visual proof.
-}

--------------------------------------------------------------------------------
-- §4.4: Center and Quotients

{-|
## Center of B₃

> "The center C of B₃ is generated by c = (σ₁σ₂)³." (p. 106)

**Full twist**: c wraps all strands around each other 360°

**Why central**: c commutes with all elements of B₃
- σ₁ · c = c · σ₁
- σ₂ · c = c · σ₂

**Geometric meaning**: Full rotation of root configuration
-}

-- Center element c = (σ₁σ₂)³
c : B₃
c = (gen σ₁ ∘ gen σ₂) ∘ (gen σ₁ ∘ gen σ₂) ∘ (gen σ₁ ∘ gen σ₂)

-- Shorthand
σ₁σ₂ : B₃
σ₁σ₂ = gen σ₁ ∘ gen σ₂

-- c as cube
c-def : c ≡ σ₁σ₂ ∘ σ₁σ₂ ∘ σ₁σ₂
c-def = refl

postulate
  -- Center C = ⟨c⟩
  C : Group lzero
  C-generated-by-c : {!!}

  -- c is central
  c-central : ∀ (b : B₃) → b ∘ c ≡ c ∘ b

{-|
## Quotient B₃/C

> "The quotient by this center is isomorphic to the group B₃/C generated by
>  a = σ₁σ₂σ₁ and b = σ₁σ₂ satisfying a² = b³." (p. 106)

**Generators**:
- a = σ₁σ₂σ₁ (from braid relation)
- b = σ₁σ₂

**Relation**: a² = b³

**Structure**: This is closely related to modular group!
-}

-- Elements a, b in B₃
a b : B₃
a = gen σ₁ ∘ gen σ₂ ∘ gen σ₁
b = gen σ₁ ∘ gen σ₂

-- a = σ₂σ₁σ₂ by braid relation
a-alt : a ≡ gen σ₂ ∘ gen σ₁ ∘ gen σ₂
a-alt = braid-relation

postulate
  -- Quotient group B₃/C
  B₃/C : Group lzero
  quotient-map : B₃ → {!!}  -- B₃ → B₃/C

  -- In quotient: a² = b³
  a²-equals-b³-in-quotient : {!!}

{-|
## Further Quotients

> "The quotient of B₃/C by a² is the Möbius group PSL₂(ℤ) of integral
>  homographies, and the quotient of B₃/C by a⁴ is the modular group SL₂(ℤ)
>  of integral matrices of determinant one, then a two fold covering of PSL₂(ℤ)."
>  (p. 106)

**Modular group SL₂(ℤ)**:
- Matrices ( a  b ) with a,b,c,d ∈ ℤ and ad - bc = 1
              ( c  d )
- Fundamental in number theory, modular forms, string theory!

**Möbius group PSL₂(ℤ)**:
- Quotient SL₂(ℤ) / {±I}
- Acts on upper half-plane ℍ by z ↦ (az+b)/(cz+d)
- Tesselates hyperbolic plane

**Connection to elliptic curves**: Period matrix of elliptic curve
  y² = z³ + uz + v
gives representation B₃ → SL₂(ℤ)
-}

postulate
  -- Modular group SL₂(ℤ)
  SL₂ℤ : Group lzero
  SL₂ℤ-matrices : {!!}  -- 2×2 integer matrices, det = 1

  -- Möbius group PSL₂(ℤ) = SL₂(ℤ) / {±I}
  PSL₂ℤ : Group lzero
  PSL₂ℤ-is-quotient : {!!}  -- SL₂ℤ / ⟨-I⟩

  -- Quotient maps
  B₃/C→PSL₂ℤ : {!!}  -- Quotient by a²
  B₃/C→SL₂ℤ : {!!}  -- Quotient by a⁴

  -- SL₂ℤ covers PSL₂ℤ
  SL₂ℤ-double-cover : {!!}

{-|
## Symmetric Group 𝔖₃

> "The quotient 𝔖₃ of B₃ is defined by the relations σ₁² = σ₂² = 1, and by
>  the relation which defines B₃, i.e. σ₁σ₂σ₁ = σ₂σ₁σ₂." (p. 107)

**Symmetric group**: Permutations of 3 elements {1, 2, 3}
- |𝔖₃| = 6
- Generated by transpositions (1 2), (2 3)

**Quotient map**: B₃ → 𝔖₃
- σ₁ ↦ (1 2) (swap strands 1 and 2)
- σ₂ ↦ (2 3) (swap strands 2 and 3)
- Forgets "over/under" crossing information

**Kernel**: Pure braid group P₃ (braids that permute trivially)
-}

postulate
  -- Symmetric group 𝔖₃
  𝔖₃ : Group lzero
  𝔖₃-order-6 : {!!}  -- |𝔖₃| = 6

  -- Quotient map B₃ → 𝔖₃
  B₃→𝔖₃ : {!!}
  B₃→𝔖₃-σ₁ : {!!}  -- Maps σ₁ to (1 2)
  B₃→𝔖₃-σ₂ : {!!}  -- Maps σ₂ to (2 3)

  -- Relations in 𝔖₃
  𝔖₃-relation-1 : {!!}  -- σ₁² = 1
  𝔖₃-relation-2 : {!!}  -- σ₂² = 1

  -- Pure braid group P₃ (kernel of B₃ → 𝔖₃)
  P₃ : Group lzero
  P₃-is-kernel : {!!}

--------------------------------------------------------------------------------
-- §4.4: Fundamental Groupoid Π(Λ★)

{-|
## Groupoid Structure

> "It is more convenient to consider the fundamental groupoid Π(Λ★_ℂ) = B₃,
>  which is a category, having for points the elements of Λ★_ℂ and arrows the
>  homotopy classes of paths between two points." (p. 106)

**Fundamental groupoid Π(Λ★)**:
- Objects: Points λ ∈ Λ★ (parameters away from discriminant)
- Morphisms: Hom(λ, λ') = homotopy classes of paths from λ to λ'
- Composition: Path concatenation
- Automorphisms: Aut(λ) = π₁(Λ★; λ) ≅ B₃

**Key property**: All Aut(λ) are isomorphic (connected groupoid)

**Advantage over groups**:
- No arbitrary basepoint choice
- Natural for varying parameters (DNN forward pass!)
- Morphisms track how roots evolve along input sequences
-}

postulate
  -- Parameter space with discriminant removed
  Λ★-complex : Type

  -- Fundamental groupoid
  Π[Λ★] : Groupoid lzero lzero

  -- Objects are points in Λ★
  Π[Λ★]-Ob : Ob Π[Λ★] ≃ Λ★-complex

  -- Morphisms are homotopy classes of paths
  Π[Λ★]-Hom : ∀ (λ λ' : Ob Π[Λ★])
            → Hom Π[Λ★] λ λ' ≃ {!!}  -- Path-homotopy classes

  -- Automorphisms are B₃
  Π[Λ★]-Aut : ∀ (λ : Ob Π[Λ★])
            → Aut Π[Λ★] λ ≃ B₃-Group

  -- Groupoid is connected
  Π[Λ★]-connected : {!!}

{-|
**DNN Interpretation**:

When processing sequence x₁, x₂, ..., x_T:
- Each x_t → (u_t, v_t) ∈ Λ★
- Path (u₁,v₁) → (u₂,v₂) → ... → (u_T,v_T)
- Homotopy class = braid element in B₃
- **Meaning emerges from the path**, not just endpoints!

Example: "This book is not uninteresting"
- Start: IE (organizing center)
- Path through E (not interesting)
- End near I (interesting)
- **Braid**: σ₁σ₂σ₁ (full loop)
- **Meaning**: More than just "interesting" (enriched by path!)

This is Culioli's "cam model" formalized!
-}

--------------------------------------------------------------------------------
-- §4.4: Groupoid B₃(ℝ) - Real Points with Complex Paths

{-|
## B₃(ℝ): Compromise Between Real and Complex

> "The disadvantage of the complex numbers is the difficulty to compute with
>  them in DNNs, for instance σ and tanh extended to ℂ have poles. Moreover
>  all the dynamical regions are confounded in Λ★_ℂ; in some sense the room
>  is too wide. Therefore, we will limit ourselves to the sub-category ΠR = B₃(ℝ),
>  made by the real points of Λ★, but retaining all the morphisms between them,
>  that is a full sub-category of B₃." (p. 107)

**Definition**: B₃(ℝ)
- Objects: Real points Λ★(ℝ) = {(u,v) ∈ ℝ² | discriminant(u,v) ≠ 0}
- Morphisms: ALL morphisms from Π(Λ★_ℂ) (including complex paths!)
- **Full subcategory**: Retains all arrows between real points

**Interpretation**:
> "This means that only the paths are imaginary in B₃(ℝ)."

**Advantages**:
- Computable: Parameters u, v are real
- Complete: Can still track root monodromy via complex paths
- Practical: DNNs work with real numbers, semantics needs complex structure
-}

-- Real points of Λ★
Λ★-real : Type
Λ★-real = Σ[ u ∈ ℝ ] Σ[ v ∈ ℝ ] (discriminant u v ≠ 0.0)

postulate
  -- Groupoid B₃(ℝ) (full subcategory of Π[Λ★])
  B₃ℝ : Groupoid lzero lzero

  -- Objects: Real points
  B₃ℝ-Ob : Ob B₃ℝ ≃ Λ★-real

  -- Full subcategory
  B₃ℝ-full : is-full-subcategory B₃ℝ Π[Λ★]

  -- Morphisms still B₃
  B₃ℝ-Hom : ∀ (λ λ' : Ob B₃ℝ)
          → Hom B₃ℝ λ λ' ≃ {!!}  -- Same as in Π[Λ★]

{-|
**Why Full Subcategory Matters**:

Restricting just objects to reals but keeping all morphisms means:
- We can track paths (u₁,v₁) → (u₂,v₂) with u_i, v_i ∈ ℝ
- Path may go through complex parameters temporarily
- Homotopy class still well-defined
- All braid operations available

This is exactly what happens in semantic processing:
- Input x_t ∈ ℝⁿ → (u_t, v_t) ∈ ℝ²
- Meaning involves "imaginary" intermediate states
- Final hidden state h_t ∈ ℝᵐ is real
-}

--------------------------------------------------------------------------------
-- §4.4: Culioli Groupoid B³ᵣ = Πᵣ

{-|
## The Culioli Groupoid

> "Another sub-groupoid could be also useful: consider the gathered surface Σ
>  in Λ × ℝ of equation z³ + uz + v = 0; let Δ₃ be the natural lifting of Δ
>  along the folding lines of Σ over Λ, the complement Σ★ of Δ₃ in Σ can be
>  canonically embedded in the complex universal covering Λ̃★." (p. 107)

**Construction**:
- Take Σ★ = Σ \ Δ₃ (non-fold points of gathered surface)
- For λ in contractile region Λ₀ inside cusp:
  - λ⁺: Point via path σ⁺ = σ₁
  - λ⁻: Point via path σ⁻ = σ₂
- When λ approaches cusp branch, one point collides with Δ₃, other stays isolated

**Culioli groupoid** B³ᵣ = Πᵣ:
- Objects: Points of Σ★
- Morphisms: Homotopy classes of paths in universal covering
- **Covering functor**: π: B³ᵣ → B₃(ℝ)

**Key feature**:
> "The interest of B³ᵣ with respect to B₃(ℝ) is that it distinguishes between
>  the stable minimum and the unstable one in the regime u < 0." (p. 107)

**Why "Culioli"**:

> "The convenient representation of the moves of Culioli is in the groupoid B³ᵣ,
>  that we propose to name the Culioli groupoid." (p. 110)

This groupoid captures the full semantic structure:
- Interior I, Exterior E, Boundary B
- Organizing center IE (on Δ₃)
- Distinguishes attractor from repulsor
- Paths = semantic operations

See Section 4.5 for details!
-}

postulate
  -- Culioli groupoid
  B³ᵣ : Groupoid lzero lzero

  -- Objects: Points of Σ★
  B³ᵣ-Ob : Ob B³ᵣ ≃ Σ★

  -- Covering functor to B₃(ℝ)
  π-covering : Functor B³ᵣ B₃ℝ

  -- Distinguishes stable/unstable
  distinguishes-branches : ∀ u v → u < 0.0
                         → {!!}  -- Two points over (u,v): stable min, saddle

  -- Four-point simplification
  four-points : {!!}  -- One outside cusp, three inside

  -- Looijenga's real structures
  looijenga-correspondence : {!!}  -- Four points ↔ real structures [Loo78]

{-|
**Comparison of Groupoids**:

| Groupoid | Objects | Morphisms | Distinguishes | Use Case |
|----------|---------|-----------|---------------|----------|
| Π(Λ★_ℂ) | Complex λ | Complex paths | Full monodromy | Theory |
| B₃(ℝ) | Real (u,v) | Complex paths | Computable params | DNNs |
| B³ᵣ | Points on Σ★ | Paths in Σ★ | Stable/unstable | Semantics |

**Which to use?**:
- **Computation**: B₃(ℝ) (real parameters, complex structure)
- **Semantics**: B³ᵣ (Culioli notional domains)
- **Theory**: Π(Λ★_ℂ) (full generality)

All are connected groupoids with Aut(·) ≅ B₃!
-}

-- Simplified version (4 representative points)
postulate
  B³ᵣ-simplified : Groupoid lzero lzero
  simplified-objects : Ob B³ᵣ-simplified ≃ Fin 4
  simplified-covers : Functor B³ᵣ-simplified B³ᵣ

--------------------------------------------------------------------------------
-- §4.4: Quotient Groupoids

{-|
## Quotients by Normal Subgroups

> "All these groupoids are connected, the two first ones, B₃(ℝ) and B³ᵣ because
>  they are full subcategories of the connected groupoid B₃, the other ones in
>  virtue of the definition of a quotient (to the right) of a groupoid by a
>  normal sub-group H of its fundamental group G." (p. 107)

**Quotient construction**:
- Start with connected groupoid 𝒢
- Let H ⊲ Aut(a) be normal subgroup for each object a
- Quotient groupoid 𝒢/H:
  - Same objects as 𝒢
  - Morphisms: f ~ g iff f⁻¹g ∈ H_a (right cosets)

**Well-defined**: H normal ⇒ H_a, H_b related by conjugation

**Examples**:
- Π(Λ★) / C → groupoid with Aut(·) ≅ B₃/C
- Π(Λ★) / P₃ → groupoid with Aut(·) ≅ 𝔖₃
- B₃(ℝ) / ⟨a²⟩ → groupoid with Aut(·) ≅ PSL₂(ℤ)
-}

postulate
  -- Quotient groupoid construction
  _//_ : (𝒢 : Groupoid lzero lzero) → {!!} -- Normal subgroup → Groupoid lzero lzero

  -- Quotient by center C
  Π[Λ★]/C : Groupoid lzero lzero
  Π[Λ★]/C-aut : ∀ λ → Aut Π[Λ★]/C λ ≃ B₃/C

  -- Quotient to symmetric group
  Π[Λ★]/P₃ : Groupoid lzero lzero
  Π[Λ★]/P₃-aut : ∀ λ → Aut Π[Λ★]/P₃ λ ≃ 𝔖₃

  -- Quotient to modular group
  B₃ℝ/⟨a²⟩ : Groupoid lzero lzero
  B₃ℝ/⟨a²⟩-aut : ∀ λ → Aut B₃ℝ/⟨a²⟩ λ ≃ PSL₂ℤ

{-|
**Natural groupoids smaller than B₃**:

Quotienting morphisms (not objects!) gives hierarchy:

B₃ → B₃/C → PSL₂(ℤ) → ...
  ↘ 𝔖₃

Each level loses information:
- B₃: Full braid structure
- B₃/C: Forget full twist
- PSL₂(ℤ): Modular forms
- 𝔖₃: Just permutations (forget over/under)

For DNNs: Choice depends on task complexity!
-}

--------------------------------------------------------------------------------
-- §4.4: Representations

{-|
## Linear Representations of B₃

### 1. Cardan Representation

> "Cardan formulas expresses the roots by using square roots and cubic roots.
>  They give explicit formulas for the differences of roots z₂ - z₁, z₃ - z₁.
>  They can be seen directly in the surface Σ." (p. 108)

**Construction**:
- Integral classes of H₀(P⁻¹_{u,v}(0)) transported along paths
- Integrate holomorphic form dz on integral classes
- Gives **linear representation** ρ: B₃ → GL₂(ℝ)
- Factorizes through 𝔖₃

**Meaning**: Track differences of roots (relative positions)

### 2. Elliptic Representation

> "Augment the variable z by a variable y, the roots can be completed by the
>  levels Z_{u,v} over (u,v) ∈ Λ, which are the elliptic curves
>    P_{u,v}(z,y) = z³ + y² + uz + v = 0" (Eq 4.31)

**Holomorphic 2-form** (Eq 4.32):
  ω = dz ∧ dy = -(1/2) dP ∧ (dz/y)

**Elliptic integral**: ∫_{cycle} dz/y over Z_{u,v}

**Periods**: Give **linear representation** ρ: B₃ → SL₂(ℤ)

**Connection to modular forms**:
- j-invariant of elliptic curve
- Modular forms on ℍ/PSL₂(ℤ)
- Moonshine, string theory, ...

**Why it matters for DNNs**:
- Elliptic curves = genus 1 Riemann surfaces
- Periods = "winding numbers" of meaning
- Modular group = symmetries of semantic space
-}

postulate
  -- Cardan representation
  cardan-repr : B₃ → {!!}  -- GL₂(ℝ)
  cardan-factorizes-𝔖₃ : {!!}

  -- Root differences
  root-diff : ℝ → ℝ → {!!}  -- (u,v) → (z₂-z₁, z₃-z₁)

  -- Elliptic curve
  Elliptic-Curve : ℝ → ℝ → Type
  elliptic-equation : ∀ u v → Elliptic-Curve u v ≃ {!!}  -- z³ + y² + uz + v = 0

  -- Holomorphic form
  ω : {!!}  -- 2-form dz ∧ dy
  ω-factorization : {!!}  -- ω = -(1/2) dP ∧ (dz/y)

  -- Elliptic representation
  elliptic-repr : B₃ → SL₂ℤ
  periods-give-repr : {!!}

{-|
### Stabilization and Higher Dimensions

> "Every stabilization of z³ by a quadratic form gives rise to the representation
>  of the first case in odd dimension and of the second case in even dimension."
>  (p. 108)

**Stabilization**: Add variables to make function non-degenerate

**Examples**:
- z³ + x² → Representation in dimension 2 (odd)
- z³ + y² → Elliptic case in dimension 2 (even)
- z³ + w² + x² + ... → Higher-dimensional representations

**Pattern**:
- Odd dimension: Factorizes through 𝔖₃
- Even dimension: Factorizes through SL₂(ℤ) or variants

This connects to higher catastrophes (A_n, D_n series) in Section 4.5!
-}

--------------------------------------------------------------------------------
-- Summary: Braid Structure of Semantics

{-|
## The Braid Group Hierarchy

```
         B₃
        / | \
       /  |  \
      /   |   \
   B₃/C   |   𝔖₃
    / \   |
   /   \  |
PSL₂ℤ  SL₂ℤ
```

**Interpretations**:
- **B₃**: Full semantic structure (all ambiguities)
- **B₃/C**: Forget full rotations
- **PSL₂(ℤ)**: Modular structure (periods of meaning)
- **SL₂(ℤ)**: With orientation
- **𝔖₃**: Just permutations (minimal structure)

**For DNNs**:
- Parameters (u,v) ∈ Λ★(ℝ) are **computable**
- Paths give **braid elements** (semantic operations)
- Groupoid structure = **context-dependent meaning**
- Representations = **quantitative measures of semantics**

**Connection to Section 4.5**:
- Culioli notional domains = regions in Λ separated by Δ
- Semantic operations = braid paths
- "This book is not uninteresting" = σ₁σ₂σ₁ (full braid)
- Catastrophe points on Δ = organizing centers (IE)

This is **algebraic topology explaining linguistic meaning**!
-}
